{
  "x-generator": "NSwag v14.1.0.0 (NJsonSchema v11.0.2.0 (Newtonsoft.Json v13.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "My Title",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:5001"
    }
  ],
  "paths": {
    "/Board/Play": {
      "post": {
        "tags": [
          "Board"
        ],
        "operationId": "Board_PlayBoard",
        "requestBody": {
          "x-name": "playBoardDTO",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlayBoardDTO"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BoardResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/Board/GetBoards": {
      "get": {
        "tags": [
          "Board"
        ],
        "operationId": "Board_GetAllBoards",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BoardResponseDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Game/NewGame": {
      "post": {
        "tags": [
          "Game"
        ],
        "operationId": "Game_NewGame",
        "requestBody": {
          "x-name": "prize",
          "content": {
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/Price/GetPrices": {
      "get": {
        "tags": [
          "Price"
        ],
        "operationId": "Price_GetPrices",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PriceDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Transaction/@user/balance/deposit": {
      "post": {
        "tags": [
          "Transaction"
        ],
        "operationId": "Transaction_PUserDepositReq",
        "requestBody": {
          "x-name": "data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DepositRequestDTO"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/Transaction/@user/balance/history": {
      "get": {
        "tags": [
          "Transaction"
        ],
        "operationId": "Transaction_PUserTransactionsReqs",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TransactionResponseDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Transaction/@admin/balance/adjustment": {
      "patch": {
        "tags": [
          "Transaction"
        ],
        "operationId": "Transaction_PUseBalance",
        "requestBody": {
          "x-name": "data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BalanceAdjustmentRequestDTO"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/Transaction/@admin/balance/history": {
      "get": {
        "tags": [
          "Transaction"
        ],
        "operationId": "Transaction_PDepositReqs",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TransactionResponseDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/User/@user": {
      "get": {
        "tags": [
          "User"
        ],
        "operationId": "User_GGetUser",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizedUserResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/User/@user/login": {
      "post": {
        "tags": [
          "User"
        ],
        "operationId": "User_PLogin",
        "requestBody": {
          "x-name": "data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLoginRequestDTO"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/User/@user/enroll": {
      "patch": {
        "tags": [
          "User"
        ],
        "operationId": "User_PEnroll",
        "requestBody": {
          "x-name": "data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserEnrollmentRequestDTO"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizedUserResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/User/@user/update": {
      "patch": {
        "tags": [
          "User"
        ],
        "operationId": "User_PUpdateUser",
        "requestBody": {
          "x-name": "data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateRequestDTO"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizedUserResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/User/@admin/signup": {
      "post": {
        "tags": [
          "User"
        ],
        "operationId": "User_PSignup",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSignupRequestDTO"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizedUserResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/User/@admin/users": {
      "get": {
        "tags": [
          "User"
        ],
        "operationId": "User_GGetUsers",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuthorizedUserResponseDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/User/@admin/user": {
      "patch": {
        "tags": [
          "User"
        ],
        "operationId": "User_PUpdateUserByAdmin",
        "requestBody": {
          "x-name": "data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateByAdminRequestDTO"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizedUserResponseDTO"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BoardResponseDTO": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "userid": {
            "type": "string",
            "format": "guid"
          },
          "gameid": {
            "type": "string",
            "format": "guid"
          },
          "price": {
            "type": "number",
            "format": "decimal"
          },
          "dateofpurchase": {
            "type": "string",
            "format": "date"
          },
          "numbers": {
            "type": "array",
            "maxItems": 8,
            "minItems": 5,
            "items": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        }
      },
      "PlayBoardDTO": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "userid"
        ],
        "properties": {
          "userid": {
            "type": "string",
            "format": "guid",
            "minLength": 1
          },
          "dateofpurchase": {
            "type": "string",
            "format": "date"
          },
          "numbers": {
            "type": "array",
            "maxItems": 8,
            "minItems": 5,
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "GameResponseDTO": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "date": {
            "type": "string",
            "format": "date"
          },
          "status": {
            "$ref": "#/components/schemas/GameStatus"
          }
        }
      },
      "GameStatus": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Active",
          "Inactive"
        ],
        "enum": [
          0,
          1
        ]
      },
      "PriceDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "price1": {
            "type": "number",
            "format": "decimal"
          },
          "numbers": {
            "type": "number",
            "format": "decimal"
          }
        }
      },
      "TransactionResponseDTO": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "userId": {
            "type": "string",
            "format": "guid"
          },
          "phoneNumber": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "transactionNumber": {
            "type": "string"
          },
          "transactionStatus": {
            "type": "string"
          }
        }
      },
      "DepositRequestDTO": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "transactionNumber"
        ],
        "properties": {
          "transactionNumber": {
            "type": "string",
            "maxLength": 15,
            "minLength": 8
          }
        }
      },
      "BalanceAdjustmentRequestDTO": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "transactionId",
          "amount",
          "adjustment",
          "transactionStatusA"
        ],
        "properties": {
          "transactionId": {
            "type": "string",
            "minLength": 1
          },
          "amount": {
            "type": "number",
            "format": "decimal",
            "maximum": 10000.0,
            "minimum": 0.0
          },
          "adjustment": {
            "$ref": "#/components/schemas/TransactionAdjustment"
          },
          "transactionStatusA": {
            "$ref": "#/components/schemas/TransactionStatusA"
          }
        }
      },
      "TransactionAdjustment": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Deposit",
          "Deduct"
        ],
        "enum": [
          "Deposit",
          "Deduct"
        ]
      },
      "TransactionStatusA": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Pending",
          "Approved",
          "Rejected"
        ],
        "enum": [
          "Pending",
          "Approved",
          "Rejected"
        ]
      },
      "AuthorizedUserResponseDTO": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "balance": {
            "type": "number",
            "format": "decimal"
          },
          "role": {
            "type": "string"
          },
          "enrolled": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "UserResponseDTO": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "jwt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "minLength": 1
          },
          "jwt": {
            "type": "string",
            "minLength": 1
          }
        }
      },
      "UserLoginRequestDTO": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "minLength": 1
          },
          "password": {
            "type": "string",
            "maxLength": 32,
            "minLength": 5
          }
        }
      },
      "UserEnrollmentRequestDTO": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "password"
        ],
        "properties": {
          "password": {
            "type": "string",
            "maxLength": 32,
            "minLength": 5
          }
        }
      },
      "UserUpdateRequestDTO": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "format": "phone",
            "maxLength": 8,
            "minLength": 8,
            "nullable": true
          },
          "password": {
            "type": "string",
            "maxLength": 32,
            "minLength": 5,
            "nullable": true
          }
        }
      },
      "UserSignupRequestDTO": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name",
          "email",
          "phoneNumber"
        ],
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1
          },
          "email": {
            "type": "string",
            "format": "email",
            "minLength": 1
          },
          "phoneNumber": {
            "type": "string",
            "format": "phone",
            "maxLength": 8,
            "minLength": 8
          }
        }
      },
      "UserUpdateByAdminRequestDTO": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "guid",
            "minLength": 1
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "format": "phone",
            "maxLength": 8,
            "minLength": 8,
            "nullable": true
          },
          "password": {
            "type": "string",
            "maxLength": 32,
            "minLength": 5,
            "nullable": true
          },
          "enrolledStatus": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserEnrolled"
              }
            ]
          },
          "userStatus": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserStatus"
              }
            ]
          },
          "userRole": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserRole"
              }
            ]
          }
        }
      },
      "UserEnrolled": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "True",
          "False"
        ],
        "enum": [
          "True",
          "False"
        ]
      },
      "UserStatus": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Active",
          "Inactive"
        ],
        "enum": [
          "Active",
          "Inactive"
        ]
      },
      "UserRole": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "User",
          "Admin"
        ],
        "enum": [
          "User",
          "Admin"
        ]
      }
    }
  }
}